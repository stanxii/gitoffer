module.exports = function(grunt) {
    var grumbleModules = module.paths[0],
        path = require('path'),
        pkg = grunt.file.readJSON('package.json'),
        buildTasks = [],
        config;

    config = {
        pkg: pkg,
        nodeunit: {
            all: ['test/**/test*.js', 'test/**/*_test.js']
        },
        jshint: {
            all: ['<%= pkg.main %>', 'src/**/*.js', 'test/**/*.js']
        }
    };

    if(pkg.grumble && pkg.grumble['export']) {
        buildTasks = ['cjsify', 'uglify'];

        config.cjsify = {
            main: {
                entry: '<%= pkg.main %>',
                options: {
                    'export': '<%= pkg.grumble.export %>',
                    'ignoreMissing': true,
                    'node': false
                },
                dest: '<%= pkg.name %>.browser.js',
            }
        };
        config.uglify = {
            main: {
                src: '<%= pkg.name %>.browser.js',
                dest: '<%= pkg.name %>.min.js'
            }
        };
    }

    grunt.initConfig(config);

    grunt.registerMultiTask('cjsify', 'Bundling by commonjs-everywhere.', function() {
        var cjsify = require('commonjs-everywhere').cjsify,
            escodegen = require('escodegen'),
            ast = cjsify(this.data.entry, this.data.dir, this.data.options),
            output = escodegen.generate(ast);

        grunt.file.write(this.data.dest, output);
    });

    function loadTasks(name) {
        grunt.loadTasks(path.join(grumbleModules, name, 'tasks'));
    }

    loadTasks('grunt-contrib-jshint');
    loadTasks('grunt-contrib-nodeunit');
    loadTasks('grunt-contrib-uglify');

    grunt.option('force', true);

    grunt.registerTask('test', ['jshint', 'nodeunit']);
    grunt.registerTask('build', buildTasks);
    grunt.registerTask('default', ['test', 'build']);
};
